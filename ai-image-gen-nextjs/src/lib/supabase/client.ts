// src/lib/supabase/client.ts
import { createClient } from '@supabase/supabase-js'
import type { Database } from './database.types' // Import the generated types

// Fetch the Supabase URL and Anon Key from environment variables.
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

// Check if the environment variables are set.
if (!supabaseUrl) {
  throw new Error("Supabase URL is not defined in environment variables. Please set NEXT_PUBLIC_SUPABASE_URL.")
}
if (!supabaseAnonKey) {
  throw new Error("Supabase Anon Key is not defined in environment variables. Please set NEXT_PUBLIC_SUPABASE_ANON_KEY.")
}

// Create and export the Supabase client instance, now typed with our Database schema.
// This instance will be used throughout the application to interact with Supabase.
export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)

// You might export the types generated by Supabase CLI later for better type safety
// export type Database = DatabaseFromSchema // Assuming DatabaseFromSchema is generated type 